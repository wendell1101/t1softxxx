server {
    listen 8888 default_server;
    server_name "~^www\.(?<maindomain>.*)$";
    root /home/vagrant/site/live;
    index index.php index.html index.shtml index.htm;
    listen 8889 ssl default_server;
    ssl_certificate ssl/og.cert;
    ssl_certificate_key ssl/og.key;
    port_in_redirect off;
    include custom_error.conf;
    client_max_body_size 2m;

    location /resources/player/built_in/ {
        root /home/vagrant/Code/og/admin/public;
    }

    location / {
        ssi on;
        expires 4h;
        add_header Cache-Control "public";
        #try_files $uri $uri/ /index.html =404;
        proxy_read_timeout 300;
    }
    location ~ \.php$ {
        fastcgi_read_timeout 300s;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php5.6-fpm-www.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_intercept_errors off;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
    }
    location ~ /\.ht {
        deny all;
    }
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }
    location = /ping.html  { access_log off; log_not_found off; }
}

proxy_cache_path /cache/nginx/www levels=1:2 keys_zone=STATIC:10m inactive=60s max_size=2g;

server {
    server_name "~^www\.(?<maindomain>.*)$";
    listen 80;
    listen 443 ssl;
    ssl_certificate ssl/og.cert;
    ssl_certificate_key ssl/og.key;
    client_max_body_size 2m;

    location /test/health/ok {
        access_log off;
        log_not_found off;
        return 200 'ok';
    }

    location / {
        rewrite_by_lua_block {
            local ck = require "resty.cookie";
            local cookie, err = ck:new()
            if not cookie then
                ngx.log(ngx.ERR, err)
                return
            end
            local stay_at_desktop, err = cookie:get("stay_at_desktop")

            if ngx.var.mobile_device == 'phone' then
                if stay_at_desktop == "1" then
                else
                    local mobile_host, count = string.gsub(ngx.var.host, 'www', 'm', 1)
                    if count >= 1 then
                        return ngx.redirect(ngx.var.scheme .. "://" .. mobile_host .. ngx.var.request_uri)
                    end
                end
            end
        }
        if ($scheme = 'http') {
            proxy_pass             $scheme://127.0.0.1:8888;
        }
        if ($scheme = 'https') {
            proxy_pass             $scheme://127.0.0.1:8889;
        }
        proxy_cache            off;
        # proxy_cache_valid      200  10m;
        # proxy_cache_valid      404  2m;
        # proxy_cache_valid      any  1m;
        proxy_set_header Host $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_max_temp_file_size 0;
        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_buffer_size          128k;
        proxy_buffers              4 128k;
        proxy_busy_buffers_size    256k;
        proxy_temp_file_write_size 256k;
    }

    location /nginx_stats {
        stub_status;
        access_log off;
        log_not_found off;
        allow 127.0.0.1;
        deny all;
    }

    rewrite ^/aff/(.*)/(.*) /aff.html?code=$1&source=$2 redirect;
    rewrite ^/aff/(.*) /aff.html?code=$1 redirect;
    rewrite ^/pub/(.*) $scheme://player.$maindomain$request_uri? redirect;
    rewrite ^/iframe_module/ $scheme://player.$maindomain$request_uri? redirect;
    rewrite ^/iframe/ $scheme://player.$maindomain$request_uri? redirect;
    rewrite ^/player_center $scheme://player.$maindomain$request_uri? redirect;
    rewrite ^/player-center $scheme://player.$maindomain$request_uri? redirect;
    rewrite /goto_oneworks.html $scheme://player.$maindomain$request_uri? last;
    rewrite /oneworks_sample.html $scheme://player.$maindomain$request_uri? last;
    rewrite ^/loadjsfile.js $scheme://player.$maindomain/resources/player/loadjsfile.js last;
    rewrite ^/ag/(.*) $scheme://player.$maindomain/ag/$1 redirect;
}